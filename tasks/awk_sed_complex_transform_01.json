{
    "id": "awk_sed_complex_transform_01",
    "title": "Awk & Sed: Filter and Reformat Logs",
    "description": "You are given a log file 'server.log'. First, use 'awk' to extract lines that contain the word \"ERROR:\" (field 3) and also have a date stamp (field 1) of \"2023-10-22\". From these filtered lines, awk should output the date (field 1), the time (field 2), and the message part (everything from the 4th field onwards), separated by spaces. Then, pipe this output to 'sed' to reformat each line from '<date> <time> <message>' to '<date>T<time> :: <message>'.",
    "command_to_practice": "awk, sed",
    "example_solution": "awk '$1 == \"2023-10-22\" && $3 == \"ERROR:\" { msg=$4; for(i=5; i<=NF; i++) msg=msg \" \" $i; print $1, $2, msg }' server.log | sed -E 's/([^ ]+) ([^ ]+) (.*)/\\1T\\2 :: \\3/'",
    "difficulty": "hard",
    "setup_files": [
        {
            "action": "create_file",
            "path": "server.log",
            "content": "2023-10-21 08:00:00 INFO: System startup\n2023-10-22 09:05:10 WARNING: Low disk space\n2023-10-22 09:15:30 ERROR: Database connection failed - timeout\n2023-10-22 10:00:00 INFO: User 'admin' logged in\n2023-10-23 11:00:00 ERROR: Service 'payments' unresponsive\n2023-10-22 14:22:05 ERROR: Null pointer exception in module UserAuth\n2023-10-22 15:00:00 INFO: Backup completed"
        }
    ],
    "input_details": {
        "prompt_for_command": "Enter awk and sed command for server.log: ",
        "working_directory": "data",
        "required_files_for_task": [ "server.log" ]
    },
    "evaluation": {
        "method": "exact_match",
        "expected_stdout": "2023-10-22T09:15:30 :: Database connection failed - timeout\n2023-10-22T14:22:05 :: Null pointer exception in module UserAuth",
        "expected_stderr": "",
        "check_command_contains": [
            { "substring": "awk" },
            { "substring": "sed" },
            { "substring": "server.log" }
        ]
    },
    "hints": [
        "In `awk`, filter lines where field 1 is \"2023-10-22\" and field 3 is \"ERROR:\".",
        "In `awk`, construct the message starting with field 4. For subsequent fields (5 to NF), prepend a space. Print field 1, field 2, and the constructed message, space-separated.",
        "Pipe the output of `awk` to `sed`.",
        "In `sed`, use a substitution command `s/old/new/`. Use `-E` for extended regex.",
        "Capture the date, time, and the rest of the message using parentheses in `sed`. Format to '<date>T<time> :: <message>' using backreferences like `\\\\1`, `\\\\2`, `\\\\3` (escaped for JSON)."
    ]
}