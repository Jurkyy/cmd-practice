{
    "id": "find_move_list_01",
    "title": "Find, Move, and List Files",
    "description": "In the 'source_dir' directory, find all files with the '.log' extension. Move these files to the 'destination_dir' directory. Finally, list the contents of 'destination_dir' in long format, sorted by modification time (newest first).",
    "command_to_practice": "find, mv, ls",
    "example_solution": "find source_dir -name '*.log' -exec mv {} destination_dir/ \\; && ls -lt destination_dir",
    "difficulty": "medium",
    "setup_files": [
        {
            "action": "create_directory",
            "path": "source_dir"
        },
        {
            "action": "create_directory",
            "path": "destination_dir"
        },
        {
            "action": "create_file",
            "path": "source_dir/app.log",
            "content": "Log entry 1"
        },
        {
            "action": "create_file",
            "path": "source_dir/server.log",
            "content": "Log entry 2"
        },
        {
            "action": "create_file",
            "path": "source_dir/data.txt",
            "content": "Some data"
        }
    ],
    "input_details": {
        "prompt_for_command": "Enter command(s): ",
        "working_directory": ".",
        "required_files_for_task": [ "source_dir", "destination_dir" ]
    },
    "evaluation": {
        "method": "complex_script_evaluation",
        "check_destination_dir_contents": {
            "expected_files": [ "app.log", "server.log" ],
            "unexpected_files": [ "data.txt" ]
        },
        "expected_stdout_pattern": "total .*\\n.* app\\.log\\n.* server\\.log",
        "expected_stderr": ""
    },
    "hints": [
        "Use `find` to locate files. The `-name` option is useful for matching filenames, and `-exec` can run a command on found files.",
        "The `mv` command moves files. You might need to use `{}` and `\\;` with `find -exec`.",
        "`ls -l` lists in long format. Check `man ls` for sorting options (e.g., by time, and reversing order).",
        "You can chain commands using `&&`."
    ]
}